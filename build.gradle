plugins {
    id "com.github.johnrengelman.shadow" version "8.1.1"
    id "maven-publish"
    id 'fabric-loom' version '1.0-SNAPSHOT'
}

base {
    archivesName = project.archives_base_name
}


version = project.mod_version
group = project.maven_group

loom {
    accessWidenerPath = file("src/main/resources/${project.mod_id}.accesswidener")

}

repositories {
    mavenLocal()
    mavenCentral()
//    maven {
//        // location of the maven that hosts JEI files since January 2023
//        name = "Jared's maven"
//        url = "https://maven.blamejared.com/"
//    }
//    maven {
//        // location of a maven mirror for JEI files, as a fallback
//        name = "ModMaven"
//        url = "https://modmaven.dev"
//    }
    maven {
        name = 'ParchmentMC'
        url = 'https://maven.parchmentmc.org'
    }
    maven { 
        name = "Fuzs Mod Resources"
        url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/"
    }
    maven { url "https://maven.terraformersmc.com/releases/" }
    maven { url = "https://mvn.devos.one/snapshots/" }
    maven { url ="https://repo1.maven.org/maven2/"}
    maven { url = "https://jitpack.io/" }
    repositories {
        maven {
            name 'Xander Maven'
            url 'https://maven.isxander.dev/releases'
        }
    }
}

configurations {
    shadowCommon // Don't use shadow from the shadow plugin because we don't want IDEA to index this.
}

dependencies {
    mappings loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${project.minecraft_version}:${project.parchment_version}@zip")
    }

    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modApi "fuzs.forgeconfigapiport:forgeconfigapiport-fabric:${forge_cofig_api_version}"
    modImplementation("dev.isxander:yet-another-config-lib:3.4.4+1.20.1-fabric")
    modLocalRuntime "fuzs.forgeconfigscreens:forgeconfigscreens-fabric:${forge_cofig_api_version}"
    modLocalRuntime 'com.terraformersmc:modmenu:7.1.0';
    modApi 'com.terraformersmc:modmenu:7.1.0';
    include(implementation(annotationProcessor("io.github.llamalad7:mixinextras-fabric:0.3.6")))
    modImplementation(include("com.tterrag.registrate_fabric:Registrate:${project.registrate_version}"))
            {exclude group: "com.github.llamalad7.mixinextras" }

    shadowCommon(implementation("javazoom:jlayer:1.0.1"))
}

processResources {
    inputs.property "mod_id", mod_id
    inputs.property "mod_version", mod_version
    inputs.property "mod_name", mod_name
    inputs.property "mod_description", mod_description
    inputs.property "archives_base_name", archives_base_name

    inputs.property "minecraft_version", minecraft_version


    filesMatching("fabric.mod.json") {
        expand "mod_version": mod_version,
                "mod_id": mod_id,
                "mod_name": mod_name,
                "mod_description": mod_description,
                "archives_base_name": archives_base_name,

                "minecraft_version": minecraft_version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = 'UTF-8'
    // Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
    it.options.release = 17
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17

    withSourcesJar()
}

shadowJar {
    configurations = [project.configurations.shadowCommon]
    relocate "javazoom", "gg.moonflower.etched.javazoom"
    archiveClassifier = "dev-shadow"
}

remapJar {
    inputFile.set shadowJar.archiveFile
    dependsOn shadowJar
    archiveClassifier = null
}

jar {
    from('LICENSE') {
        rename { "${it}_${base.archivesName.get()}" }
    }
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}